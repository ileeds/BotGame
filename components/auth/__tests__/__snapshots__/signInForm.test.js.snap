// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Component
    id="SignInForm"
    style={
      Object {
        "backgroundColor": "#3E5382",
        "flex": 1,
      }
    }
  >
    <Component
      style={
        Object {
          "flex": 0.5,
        }
      }
    />
    <CardSection>
      <ConfirmationCodeInput
        activeColor="rgba(255, 255, 255, 1)"
        autoFocus={true}
        cellBorderWidth={1}
        className="border-box"
        codeLength={4}
        compareWithCode=""
        id="CodeInput"
        ignoreCase={false}
        inactiveColor="rgba(255, 255, 255, 0.2)"
        inputPosition="center"
        keyboardType="numeric"
        onFulfill={[Function]}
        size={50}
        space={20}
      />
    </CardSection>
    <CardSection>
      <ButtonLarge
        id="ButtonLarge"
        onPress={[Function]}
        text="Get Another Code"
      />
    </CardSection>
    <Component
      style={
        Object {
          "flex": 2,
        }
      }
    />
  </Component>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "flex": 0.5,
            }
          }
        />,
        <CardSection>
          <ConfirmationCodeInput
            activeColor="rgba(255, 255, 255, 1)"
            autoFocus={true}
            cellBorderWidth={1}
            className="border-box"
            codeLength={4}
            compareWithCode=""
            id="CodeInput"
            ignoreCase={false}
            inactiveColor="rgba(255, 255, 255, 0.2)"
            inputPosition="center"
            keyboardType="numeric"
            onFulfill={[Function]}
            size={50}
            space={20}
          />
        </CardSection>,
        <CardSection>
          <ButtonLarge
            id="ButtonLarge"
            onPress={[Function]}
            text="Get Another Code"
          />
        </CardSection>,
        undefined,
        <Component
          style={
            Object {
              "flex": 2,
            }
          }
        />,
      ],
      "id": "SignInForm",
      "style": Object {
        "backgroundColor": "#3E5382",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "style": Object {
            "flex": 0.5,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ConfirmationCodeInput
            activeColor="rgba(255, 255, 255, 1)"
            autoFocus={true}
            cellBorderWidth={1}
            className="border-box"
            codeLength={4}
            compareWithCode=""
            id="CodeInput"
            ignoreCase={false}
            inactiveColor="rgba(255, 255, 255, 0.2)"
            inputPosition="center"
            keyboardType="numeric"
            onFulfill={[Function]}
            size={50}
            space={20}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeColor": "rgba(255, 255, 255, 1)",
            "autoFocus": true,
            "cellBorderWidth": 1,
            "className": "border-box",
            "codeLength": 4,
            "compareWithCode": "",
            "id": "CodeInput",
            "ignoreCase": false,
            "inactiveColor": "rgba(255, 255, 255, 0.2)",
            "inputPosition": "center",
            "keyboardType": "numeric",
            "onFulfill": [Function],
            "size": 50,
            "space": 20,
          },
          "ref": "codeInputRef",
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ButtonLarge
            id="ButtonLarge"
            onPress={[Function]}
            text="Get Another Code"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "id": "ButtonLarge",
            "onPress": [Function],
            "text": "Get Another Code",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "style": Object {
            "flex": 2,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "flex": 0.5,
              }
            }
          />,
          <CardSection>
            <ConfirmationCodeInput
              activeColor="rgba(255, 255, 255, 1)"
              autoFocus={true}
              cellBorderWidth={1}
              className="border-box"
              codeLength={4}
              compareWithCode=""
              id="CodeInput"
              ignoreCase={false}
              inactiveColor="rgba(255, 255, 255, 0.2)"
              inputPosition="center"
              keyboardType="numeric"
              onFulfill={[Function]}
              size={50}
              space={20}
            />
          </CardSection>,
          <CardSection>
            <ButtonLarge
              id="ButtonLarge"
              onPress={[Function]}
              text="Get Another Code"
            />
          </CardSection>,
          undefined,
          <Component
            style={
              Object {
                "flex": 2,
              }
            }
          />,
        ],
        "id": "SignInForm",
        "style": Object {
          "backgroundColor": "#3E5382",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "flex": 0.5,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ConfirmationCodeInput
              activeColor="rgba(255, 255, 255, 1)"
              autoFocus={true}
              cellBorderWidth={1}
              className="border-box"
              codeLength={4}
              compareWithCode=""
              id="CodeInput"
              ignoreCase={false}
              inactiveColor="rgba(255, 255, 255, 0.2)"
              inputPosition="center"
              keyboardType="numeric"
              onFulfill={[Function]}
              size={50}
              space={20}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeColor": "rgba(255, 255, 255, 1)",
              "autoFocus": true,
              "cellBorderWidth": 1,
              "className": "border-box",
              "codeLength": 4,
              "compareWithCode": "",
              "id": "CodeInput",
              "ignoreCase": false,
              "inactiveColor": "rgba(255, 255, 255, 0.2)",
              "inputPosition": "center",
              "keyboardType": "numeric",
              "onFulfill": [Function],
              "size": 50,
              "space": 20,
            },
            "ref": "codeInputRef",
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ButtonLarge
              id="ButtonLarge"
              onPress={[Function]}
              text="Get Another Code"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": "ButtonLarge",
              "onPress": [Function],
              "text": "Get Another Code",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "flex": 2,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
